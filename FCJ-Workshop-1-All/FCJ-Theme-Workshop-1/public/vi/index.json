[
{
	"uri": "//localhost:1313/vi/4-createrepo/4.1-updateiamrole/",
	"title": "Cập nhật IAM Role",
	"tags": [],
	"description": "",
	"content": "Để các EC2 instance của chúng ta có thể gửi session log tới S3 bucket , chúng ta sẽ cần cập nhật IAM Role đã gán vào EC2 instance bằng cách thêm vào policy cho phép quyền truy cập vào S3.\nCập nhật IAM Role Truy cập vào giao diện quản trị dịch vụ IAM Click Roles. Tại ô tìm kiếm , điền SSM. Click vào role SSM-Role. Click Attach policies. Tại ô Search điền S3. Click chọn policy AmazonS3FullAccess. Click Attach policy. Trong thực tế chúng ta sẽ cấp quyền chặt chẽ hơn tới S3 bucket chỉ định. Trong khuôn khổ bài lab này chúng ta sử dụng policy AmazonS3FullAccess cho tiện dụng.\nTiếp theo chúng ta sẽ tiến hành tạo S3 bucket để lưu trữ session logs.\n"
},
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Trong môi trường phát triển phần mềm ngày nay, việc duy trì tính linh hoạt, tốc độ và độ tin cậy trong quy trình phát triển và triển khai ứng dụng là cực kỳ quan trọng. Continuous Integration (CI) và Continuous Delivery/Deployment (CD) là những phương pháp tiếp cận tốt nhất giúp đạt được mục tiêu này. CI/CD giúp tự động hóa các bước từ việc tích hợp mã nguồn, xây dựng ứng dụng, thử nghiệm và triển khai ứng dụng lên môi trường sản xuất một cách suôn sẻ và liên tục.\nHoàn cảnh sử dụng CI/CD:\nMột nhóm phát triển phần mềm thường gặp phải thách thức về việc duy trì tính nhất quán và chất lượng của mã nguồn khi làm việc trong một môi trường động với nhiều lập trình viên. Việc triển khai thủ công có thể dẫn đến lỗi, trì hoãn và thậm chí là sự cố hệ thống nghiêm trọng. CI/CD giải quyết vấn đề này bằng cách tự động hóa quy trình xây dựng và triển khai, giúp phát hiện và sửa lỗi sớm, giảm thời gian đưa sản phẩm ra thị trường và tăng cường phản hồi từ người dùng cuối.\nSử dụng CI/CD trên AWS\nAWS cung cấp bộ công cụ hỗ trợ CI/CD bao gồm một loạt các dịch vụ có thể tích hợp sâu cùng nhau, có thể đáp ứng nhu cầu xây dựng luồng CI/CD một cách tối ưu nhất cho quy mô và độ phức tạp dự án. Bộ công cụ bao gồm các dịch vụ chính như AWS CodeCommit, AWS CodeBuild, AWS CodeDeploy, AWS CodePipeline được thiết kế để làm việc một cách mượt mà với các dịch vụ AWS khác như S3, Lambda, EC2, ECS, EKS, \u0026hellip;\n"
},
{
	"uri": "//localhost:1313/vi/",
	"title": "Hoà&#39;s Workshop 1",
	"tags": [],
	"description": "",
	"content": "CI/CD VỚI AWS Tổng quan Trong bài lab này, chúng ta sẽ cùng nhau đi xây dựng 1 luồng CI/CD bằng các công cụ hỗ trợ CI/CD trên nền tảng AWS\nNội dung Giới thiệu Tổng quan kiến trúc Tạo các Policy và Role cần thiết Tạo repository trên CodeCommit Tạo các Lambda Tạo luồng CodePipeline Kiểm tra kết quả chạy Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/3-policyandrole/3.1-codepipeline/",
	"title": "Tạo Role cho CodePipeline",
	"tags": [],
	"description": "",
	"content": "\nTruy cập vào giao diện quản trị của dịch vụ IAM. Click chọn Roles. Click Create role. Click Custom trust policy. Sửa \u0026ldquo;Custom trust policy\u0026rdquo; như hình. Click Next Tại trang Add permissions, lần lượt thêm các policy AmazonS3FullAccess, AWSCodeCommitFullAccess, AWSCodeDeployFullAccess, AWSCodePipeline_FullAccess, AWSLambda_FullAccess do pipeline của chúng ta cần tương tác với các service đó. Click Next. Tại trang Name, review, and create, điền Role name và Description, kiểm tra lại Trust policy và Add permissions, sau đó bấm Create role Sau khi Create role, chúng ta sẽ vào lại giao diện Console của IAM, tìm kiếm tên Role và click vào kiểm tra lại các setting, phần này mình hơi lười nên không có ảnh đâu, mọi người tự làm nha (\u0026gt;_\u0026lt;).\n"
},
{
	"uri": "//localhost:1313/vi/3-policyandrole/3.2-lambda/",
	"title": "Tạo Role cho Lambda",
	"tags": [],
	"description": "",
	"content": "\nTruy cập vào giao diện quản trị của dịch vụ IAM. Click chọn Roles. Click Create role. Click Custom trust policy. Sửa \u0026ldquo;Custom trust policy\u0026rdquo; như hình. Click Next Tại trang Add permissions, lần lượt thêm các policy AmazonDynamoDBFullAccess, AmazonS3FullAccess, AWSCodeCommitFullAccess, AWSGlueServiceRole do các hàm lambda của chúng ta cần tương tác với các service đó. Để Lambda có thể thực hiện việc tạo job Glue, cần quyền iam:PassRole để pass qua bước xác thực trong quá trình tạo Glue job, ở đây chúng ta sẽ tạo 1 custom policy có quyền iam:PassRole và gắn vào role. Click Next. Tại trang Name, review, and create, điền Role name và Description, kiểm tra lại Trust policy và Add permissions, sau đó bấm Create role Sau khi Create role, chúng ta sẽ vào lại giao diện Console của IAM, tìm kiếm tên Role và click vào kiểm tra lại các setting, phần này mình hơi lười nên không có ảnh đâu, mọi người tự làm nha (\u0026gt;_\u0026lt;).\n"
},
{
	"uri": "//localhost:1313/vi/4-createrepo/4.2-creates3bucket/",
	"title": "Tạo S3 Bucket",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ tạo 1 S3 bucket để lưu trữ các session logs được gửi từ các EC2 instance.\nTạo S3 Bucket Truy cập giao diện quản trị dịch vụ S3 Click Create bucket. Tại trang Create bucket. Tại mục Bucket name điền tên bucket lab-yourname-bucket-0001 Tại mục Region chọn Region bạn đang làm lab hiện tại. Tên S3 bucket phải đảm bảo không trùng với toàn bộ S3 bucket khác trong hệ thống. Bạn có thể thay thế tên mình và điền số ngẫu nhiên khi tạo tên S3 bucket.\nKéo chuột xuống phía dưới và click Create bucket. Khi tạo S3 bucket chúng ta đã thực hiện Block all public access nên các EC2 instance của chúng ta sẽ không thể kết nối tới S3 thông qua mạng internet. Trong bước tiếp theo chúng ta sẽ cấu hình tính năng S3 Gateway Endpoint để cho phép các EC2 instance có thể kết nối tới S3 bucket thông qua mạng nội bộ của VPC.\n"
},
{
	"uri": "//localhost:1313/vi/2-overview/",
	"title": "Tổng quan kiến trúc",
	"tags": [],
	"description": "",
	"content": "\nTrong bài workshop này, chúng ta sẽ cùng nhau dựng 1 luồng CI/CD cơ bản sử dụng các service của AWS, bao gồm:\nCodeCommit CodeDeploy CodePipeline (CodeCommit -\u0026gt; CodeDeploy -\u0026gt; Lambda) Lambda S3 DynamoDB Glue Luồng CI/CD này của chúng ta sẽ hoạt động như sau:\nLập trình viên push code lên CodeCommit. CodeDeploy đồng bộ các file trong repository CodeCommit lên S3 bucket. Lambda (1) đọc file Job\u0026rsquo;s Entry từ S3 bucket và lưu vào DynamoDB. Lambda (2) đọc file Job\u0026rsquo;s Config và Job\u0026rsquo;s Script từ S3 bucket, sau đó tạo Glue job theo thông tin cấu hình trong file. Luồng CI/CD thông thường sẽ có sử dụng cả CodeBuild để chạy các bài test, nhưng trong giới hạn bài workshop này các file sẽ chỉ là file khai báo và script thôi nên chúng ta sẽ bỏ qua bước \u0026ldquo;Build\u0026rdquo;.\n"
},
{
	"uri": "//localhost:1313/vi/3-policyandrole/",
	"title": "Tạo các Policy và Role cần thiết",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ thực hiện tạo các Policy và Role cần thiết để các service có thể tương tác với nhau.\nNội dung 3.1. Tạo Role cho CodePipeline 3.2. Tạo Role cho Lambda 3.3. Tạo Role cho Glue\n"
},
{
	"uri": "//localhost:1313/vi/3-policyandrole/3.3-glue/",
	"title": "Tạo Role cho Glue",
	"tags": [],
	"description": "",
	"content": "\nTruy cập vào giao diện quản trị của dịch vụ IAM. Click chọn Roles. Click Create role. Click Custom trust policy. Sửa \u0026ldquo;Custom trust policy\u0026rdquo; như hình. Click Next Tại trang Add permissions, lần lượt thêm các policy AmazonS3FullAccess, AWSGlueServiceRole do các job Glue của chúng ta cần các quyền tương ứng. Click Next. Tại trang Name, review, and create, điền Role name và Description, kiểm tra lại Trust policy và Add permissions, sau đó bấm Create role Sau khi Create role, chúng ta sẽ vào lại giao diện Console của IAM, tìm kiếm tên Role và click vào kiểm tra lại các setting, phần này mình hơi lười nên không có ảnh đâu, mọi người tự làm nha (\u0026gt;_\u0026lt;).\n"
},
{
	"uri": "//localhost:1313/vi/4-createrepo/4.3-creategwes3/",
	"title": "Tạo S3 Gateway endpoint",
	"tags": [],
	"description": "",
	"content": " Truy cập vào giao diện quản trị dịch vụ VPC Click Endpoints. Click Create endpoint. Tại trang Create endpoint. Tại mục Name tag điền S3GW. Tại mục Service Category click chọn AWS services. Tại ô tìm kiếm điền S3, sau đó chọn com.amazonaws.[region].s3 Tại mục Services chọn com.amazonaws.[region].s3 có Type là Gateway. Tại mục VPC , chọn Lab VPC. Tại mục Route tables, chọn cả 2 route table. Kéo chuột xuống dưới cùng, click Create endpoint. Bước tiếp theo chúng ta sẽ tiến hành cấu hình Session Manager để có thể lưu trữ các session logs tới S3 bucket chúng ta đã tạo.\n"
},
{
	"uri": "//localhost:1313/vi/4-createrepo/",
	"title": "Tạo repository trên CodeCommit",
	"tags": [],
	"description": "",
	"content": "Với Session Manager chúng ta có thể xem được lịch sử các kết nối tới các instance thông qua Session history. Tuy nhiên chúng ta chưa xem được chi tiết các câu lệnh được sử dụng.\nTrong phần này chúng ta sẽ tiến hành tạo S3 bucket và thực hiện cấu hình lưu trữ các session logs để xem được chi tiết các câu lệnh được sử dụng trong session.\nNội dung: Cập nhật IAM Role Tạo S3 Bucket Tạo S3 Gateway endpoint Cấu hình Session logs "
},
{
	"uri": "//localhost:1313/vi/4-createrepo/4.4-configsessionlogs/",
	"title": "Theo dõi session logs",
	"tags": [],
	"description": "",
	"content": "Theo dõi session logs Truy cập giao diện quản trị dịch vụ System Manager - Session Manager Click tab Preferences. Click Edit. Kéo chuột xuống phía dưới, tại mục S3 logging, click chọn Enable. Bỏ chọn Allow only encrypted S3 buckets. Click chọn Choose a bucket name from the list. Chọn S3 bucket bạn đã tạo. Kéo chuột xuống phía dưới, click Save để lưu cấu hình.\nTruy cập giao diện quản trị dịch vụ System Manager - Session Manager\nClick Start session. Click chọn Private Windows Instance. Click Start session. Gõ lệnh ipconfig. Gõ lệnh hostname. Click Terminate để thoát session, click Terminate 1 lần nữa để xác nhận. Kiểm tra Session logs trong S3 Truy cập vào giao diện quản trị dịch vụ S3 Click vào tên S3 bucket chúng ta đã tạo cho bài lab. Click vào tên file sessions log Tại trang chi tiết objects , click Open. File logs sẽ được mở ở 1 tab mới trên trình duyệt.Bạn có thể xem các câu lệnh đã được lưu trữ lại trong session logs. "
},
{
	"uri": "//localhost:1313/vi/5-createlambda/",
	"title": "Tạo các Lambda",
	"tags": [],
	"description": "",
	"content": "\rPort Forwarding là mốt cách thức hữu ích để chuyển hướng lưu lượng mạng từ 1 địa chỉ IP - Port này sang 1 địa chỉ IP - Port khác. Với Port Forwarding chúng ta có thể truy cập một EC2 instance nằm trong private subnet từ máy trạm của chúng ta.\nChúng ta sẽ cấu hình Port Forwarding cho kết nối RDP giữa máy của mình với Private Windows Instance nằm trong private subnet mà chúng ta đã tạo cho bài thực hành này.\nTạo IAM User có quyền kết nối SSM Truy cập vào giao diện quản trị dịch vụ IAM Click Users , sau đó click Add users. Tại trang Add user. Tại mục User name, điền Portfwd. Click chọn Access key - Programmatic access. Click Next: Permissions. Click Attach existing policies directly. Tại ô tìm kiếm , điền ssm. Click chọn AmazonSSMFullAccess. Click Next: Tags, click Next: Reviews. Click Create user. Lưu lại thông tin Access key ID và Secret access key để thực hiện cấu hình AWS CLI. Cài đặt và cấu hình AWS CLI và Session Manager Plugin Để thực hiện phần thực hành này, đảm bảo máy trạm của bạn đã cài AWS CLI và Session Manager Plugin\nBạn có thể tham khảo thêm bài thực hành về cài đặt và cấu hình AWS CLI tại đây.\nVới Windows thì khi giải nén thư mục cài đặt Session Manager Plugin bạn hãy chạy file install.bat với quyền Administrator để thực hiện cài đặt.\nThực hiện Portforwarding Chạy command dưới đây trong Command Prompt trên máy của bạn để cấu hình Port Forwarding. aws ssm start-session --target (your ID windows instance) --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region (your region) Thông tin Instance ID của Windows Private Instance có thể tìm được khi bạn xem chi tiết máy chủ EC2 Windows Private Instance.\nCâu lệnh ví dụ C:\\Windows\\system32\u0026gt;aws ssm start-session --target i-06343d7377486760c --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region ap-southeast-1 Nếu câu lệnh của bạn báo lỗi như dưới đây : SessionManagerPlugin is not found. Please refer to SessionManager Documentation here: http://docs.aws.amazon.com/console/systems-manager/session-manager-plugin-not-found\nChứng tỏ bạn chưa cài Session Manager Plugin thành công. Bạn có thể cần khởi chạy lại Command Prompt sau khi cài Session Manager Plugin.\nKết nối tới Private Windows Instance bạn đã tạo bằng công cụ Remote Desktop trên máy trạm của bạn. Tại mục Computer: điền localhost:9999. Quay trở lại giao diện quản trị của dịch vụ System Manager - Session Manager. Click tab Session history. Chúng ta sẽ thấy các session logs với tên Document là AWS-StartPortForwardingSession. Chúc mừng bạn đã hoàn tất bài thực hành hướng dẫn cách sử dụng Session Manager để kết nối cũng như lưu trữ các session logs trong S3 bucket. Hãy nhớ thực hiện bước dọn dẹp tài nguyên để tránh sinh chi phí ngoài ý muốn nhé.\n"
},
{
	"uri": "//localhost:1313/vi/6-createpipeline/",
	"title": "Tạo luồng CodePipeline",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/7-check/",
	"title": "Kiểm tra kết quả chạy",
	"tags": [],
	"description": "",
	"content": "\rPort Forwarding là mốt cách thức hữu ích để chuyển hướng lưu lượng mạng từ 1 địa chỉ IP - Port này sang 1 địa chỉ IP - Port khác. Với Port Forwarding chúng ta có thể truy cập một EC2 instance nằm trong private subnet từ máy trạm của chúng ta.\nChúng ta sẽ cấu hình Port Forwarding cho kết nối RDP giữa máy của mình với Private Windows Instance nằm trong private subnet mà chúng ta đã tạo cho bài thực hành này.\nTạo IAM User có quyền kết nối SSM Truy cập vào giao diện quản trị dịch vụ IAM Click Users , sau đó click Add users. Tại trang Add user. Tại mục User name, điền Portfwd. Click chọn Access key - Programmatic access. Click Next: Permissions. Click Attach existing policies directly. Tại ô tìm kiếm , điền ssm. Click chọn AmazonSSMFullAccess. Click Next: Tags, click Next: Reviews. Click Create user. Lưu lại thông tin Access key ID và Secret access key để thực hiện cấu hình AWS CLI. Cài đặt và cấu hình AWS CLI và Session Manager Plugin Để thực hiện phần thực hành này, đảm bảo máy trạm của bạn đã cài AWS CLI và Session Manager Plugin\nBạn có thể tham khảo thêm bài thực hành về cài đặt và cấu hình AWS CLI tại đây.\nVới Windows thì khi giải nén thư mục cài đặt Session Manager Plugin bạn hãy chạy file install.bat với quyền Administrator để thực hiện cài đặt.\nThực hiện Portforwarding Chạy command dưới đây trong Command Prompt trên máy của bạn để cấu hình Port Forwarding. aws ssm start-session --target (your ID windows instance) --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region (your region) Thông tin Instance ID của Windows Private Instance có thể tìm được khi bạn xem chi tiết máy chủ EC2 Windows Private Instance.\nCâu lệnh ví dụ C:\\Windows\\system32\u0026gt;aws ssm start-session --target i-06343d7377486760c --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region ap-southeast-1 Nếu câu lệnh của bạn báo lỗi như dưới đây : SessionManagerPlugin is not found. Please refer to SessionManager Documentation here: http://docs.aws.amazon.com/console/systems-manager/session-manager-plugin-not-found\nChứng tỏ bạn chưa cài Session Manager Plugin thành công. Bạn có thể cần khởi chạy lại Command Prompt sau khi cài Session Manager Plugin.\nKết nối tới Private Windows Instance bạn đã tạo bằng công cụ Remote Desktop trên máy trạm của bạn. Tại mục Computer: điền localhost:9999. Quay trở lại giao diện quản trị của dịch vụ System Manager - Session Manager. Click tab Session history. Chúng ta sẽ thấy các session logs với tên Document là AWS-StartPortForwardingSession. Chúc mừng bạn đã hoàn tất bài thực hành hướng dẫn cách sử dụng Session Manager để kết nối cũng như lưu trữ các session logs trong S3 bucket. Hãy nhớ thực hiện bước dọn dẹp tài nguyên để tránh sinh chi phí ngoài ý muốn nhé.\n"
},
{
	"uri": "//localhost:1313/vi/8-cleanup/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "\rPort Forwarding là mốt cách thức hữu ích để chuyển hướng lưu lượng mạng từ 1 địa chỉ IP - Port này sang 1 địa chỉ IP - Port khác. Với Port Forwarding chúng ta có thể truy cập một EC2 instance nằm trong private subnet từ máy trạm của chúng ta.\nChúng ta sẽ cấu hình Port Forwarding cho kết nối RDP giữa máy của mình với Private Windows Instance nằm trong private subnet mà chúng ta đã tạo cho bài thực hành này.\nTạo IAM User có quyền kết nối SSM Truy cập vào giao diện quản trị dịch vụ IAM Click Users , sau đó click Add users. Tại trang Add user. Tại mục User name, điền Portfwd. Click chọn Access key - Programmatic access. Click Next: Permissions. Click Attach existing policies directly. Tại ô tìm kiếm , điền ssm. Click chọn AmazonSSMFullAccess. Click Next: Tags, click Next: Reviews. Click Create user. Lưu lại thông tin Access key ID và Secret access key để thực hiện cấu hình AWS CLI. Cài đặt và cấu hình AWS CLI và Session Manager Plugin Để thực hiện phần thực hành này, đảm bảo máy trạm của bạn đã cài AWS CLI và Session Manager Plugin\nBạn có thể tham khảo thêm bài thực hành về cài đặt và cấu hình AWS CLI tại đây.\nVới Windows thì khi giải nén thư mục cài đặt Session Manager Plugin bạn hãy chạy file install.bat với quyền Administrator để thực hiện cài đặt.\nThực hiện Portforwarding Chạy command dưới đây trong Command Prompt trên máy của bạn để cấu hình Port Forwarding. aws ssm start-session --target (your ID windows instance) --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region (your region) Thông tin Instance ID của Windows Private Instance có thể tìm được khi bạn xem chi tiết máy chủ EC2 Windows Private Instance.\nCâu lệnh ví dụ C:\\Windows\\system32\u0026gt;aws ssm start-session --target i-06343d7377486760c --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region ap-southeast-1 Nếu câu lệnh của bạn báo lỗi như dưới đây : SessionManagerPlugin is not found. Please refer to SessionManager Documentation here: http://docs.aws.amazon.com/console/systems-manager/session-manager-plugin-not-found\nChứng tỏ bạn chưa cài Session Manager Plugin thành công. Bạn có thể cần khởi chạy lại Command Prompt sau khi cài Session Manager Plugin.\nKết nối tới Private Windows Instance bạn đã tạo bằng công cụ Remote Desktop trên máy trạm của bạn. Tại mục Computer: điền localhost:9999. Quay trở lại giao diện quản trị của dịch vụ System Manager - Session Manager. Click tab Session history. Chúng ta sẽ thấy các session logs với tên Document là AWS-StartPortForwardingSession. Chúc mừng bạn đã hoàn tất bài thực hành hướng dẫn cách sử dụng Session Manager để kết nối cũng như lưu trữ các session logs trong S3 bucket. Hãy nhớ thực hiện bước dọn dẹp tài nguyên để tránh sinh chi phí ngoài ý muốn nhé.\n"
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]